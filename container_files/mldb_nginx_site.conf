upstream mldb_upstream {
    server {{MLDB_RUNNER_LISTEN_ADDR}}:{{MLDB_RUNNER_LISTEN_PORT}};
    keepalive 64;
}

upstream mldb_logger {
    server 127.0.0.1:{{MLDB_LOGGER_HTTP_PORT}};
    keepalive 8;
}

server {
    listen 80;
    server_name mldb; 
    keepalive_requests 1000000000;

    include /etc/nginx/uwsgi_params;
    root /opt/local/assets/www;

    access_log off;  # left out for performance reasons
    # access_log /var/log/nginx/access.log;  # uncomment if required
    error_log /var/log/nginx/error.log;

    client_max_body_size 0;  # dangerously unlimited POST/PUT size.
    proxy_read_timeout 2h;    # allow long running import scripts

    location @mldb {
       proxy_pass http://mldb_upstream;
       proxy_http_version 1.1;
       proxy_set_header Connection "";
       add_header Access-Control-Allow-Origin *;
    }

    error_page 401 {{HTTP_BASE_URL}}/licensing.html;
    error_page 502 503 {{HTTP_BASE_URL}}/5xx.html;

    location {{HTTP_BASE_URL}}/5xx.json {
        types { } default_type application/json;
    }

    location {% if HTTP_BASE_URL != "" %}{{HTTP_BASE_URL}}{%else%}/{%endif%} {
{%- if NGINX_ENABLE_AUTH_CHECK is defined and NGINX_ENABLE_AUTH_CHECK=="yes" %}
        # http://nginx.org/en/docs/http/ngx_http_auth_request_module.html#auth_request
        # If the subrequest returns a 2xx response code, the access is allowed.
        # If it returns 401 or 403, the access is denied with the corresponding error code.
        # Any other response code returned by the subrequest is considered an error.
        auth_request /auth-check;
{%- endif %}

        # PUBLIC static resources
        location ~ ^{{HTTP_BASE_URL}}/(licensing.html|favicon.ico|resources/) {
            rewrite ^{{HTTP_BASE_URL}}(/?.*) $1 break;
            auth_request off;
        }

        location ~ ^{{HTTP_BASE_URL}}/?$ {
            rewrite ^{{HTTP_BASE_URL}}(/?.*) / break;
            auth_request off;
        }

        # PUBLIC proxied services
        location {{HTTP_BASE_URL}}/auth-check {
            auth_request off;
            uwsgi_param REQUEST_METHOD GET;
            uwsgi_param REQUEST_URI /verifier/activation;
            uwsgi_param PATH_INFO /verifier/activation;
            uwsgi_pass 127.0.0.1:9100 ;
        }
        location {{HTTP_BASE_URL}}/verifier/activation_sign_in {
            auth_request off;
            uwsgi_pass 127.0.0.1:9100 ;
        }

        # PRIVATE resources - protected by auth_check above

        # hack to avoid losing port in redirects
        # http://forum.nginx.org/read.php?29,257545,257545#msg-257545
        location = {{HTTP_BASE_URL}}/doc {
            return 301 $scheme://$http_host{{HTTP_BASE_URL}}/doc/;
        }

        location {{HTTP_BASE_URL}}/doc/ {
            # send documentation render requests to mldb (.md.html)
            rewrite ^{{HTTP_BASE_URL}}(/?.*) $1 break;
            try_files $uri $uri/ @mldb;
        }

        # Credentialsd routes
        location {{HTTP_BASE_URL}}/{{CREDENTIALSD_BASE_URL}}/types {
            proxy_pass http://{{CREDENTIALSD_LISTEN_ADDR}}:{{CREDENTIALSD_LISTEN_PORT}}/v1/types;
        }
        location {{HTTP_BASE_URL}}/{{CREDENTIALSD_BASE_URL}}/rules {
            proxy_pass http://{{CREDENTIALSD_LISTEN_ADDR}}:{{CREDENTIALSD_LISTEN_PORT}}/v1/rules;
        }

        # MLDB routes
        location {{HTTP_BASE_URL}}/v1 {
            proxy_pass http://mldb_upstream/v1;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header mldb-original-uri $uri;
            error_page 502 503 {{HTTP_BASE_URL}}/5xx.json;
        }

        # ipython
        location {{HTTP_BASE_URL}}/{{IPYTHON_NB_PREFIX}} {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_http_version 1.1;
            # for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # make sure this works even if we can't write to local fs
            proxy_max_temp_file_size 0;
            proxy_pass http://{{IPYTHON_NB_LISTEN_ADDR}}:{{IPYTHON_NB_LISTEN_PORT}};
        }

        location {{HTTP_BASE_URL}}/logs/mldb {
           types { } default_type text/plain;
           proxy_pass http://mldb_logger/logs/mldb;
           proxy_http_version 1.1;
           proxy_set_header Connection "";
           add_header Access-Control-Allow-Origin *;
        }
    }

    # MLDB routes at root - pymldb uses it from within container
    # Credentialsd routes
    location {{CREDENTIALSD_BASE_URL}}/types {
        proxy_pass http://{{CREDENTIALSD_LISTEN_ADDR}}:{{CREDENTIALSD_LISTEN_PORT}}/v1/types;
    }
    location {{CREDENTIALSD_BASE_URL}}/rules {
        proxy_pass http://{{CREDENTIALSD_LISTEN_ADDR}}:{{CREDENTIALSD_LISTEN_PORT}}/v1/rules;
    }
 
    # MLDB routes
    location /v1 {
        proxy_pass http://mldb_upstream/v1;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header mldb-original-uri $uri;
        error_page 502 503 {{HTTP_BASE_URL}}/5xx.json;
    }
}
